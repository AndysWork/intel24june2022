# This is a basic workflow to help you get started with Actions

name: GatsbyApp CICD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '13.x'
      - name: Install Project Dependencies
        run: npm ci
      - name: Install Gatsby CLI
        run: npm install -g gatsby-cli@2.12.34
      - name: Install App Dependencies
        run: npm install     
      - name: Build
        run: gatsby build
      - name: Verify build
        run: ls -la public
      - name: Copy & Deploy
        uses: mdallasanta/ssh-scp-deploy@v1.2.0
        with:
          local: 'public'                                                  # Local file path - REQUIRED false - DEFAULT ./
          remote: '/home/${{secrets.USER}}'                                                 # Remote file path - REQUIRED false - DEFAULT ~/
          host: ${{secrets.HOST}}                                      # Remote server address - REQUIRED true
          user: ${{secrets.USER}}                                      # Remote server user - REQUIRED true                          # User password - REQUIRED at least one of "password" or "key" 
          key: ${{secrets.KEY}}                                        # Remote server private key - REQUIRED at least one of "password" or "key" 
          pre_upload: echo "Removed Files"  # Command to run via ssh before scp upload - REQUIRED false
          post_upload: sudo mv public/* /var/www/html  # Command to run via ssh after scp upload - REQUIRED false
          ssh_options: -o StrictHostKeyChecking=no                     # A set of ssh_option separated by -o - REQUIRED false - DEFAULT -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
          scp_options: -v                                              # Flags to use during scp - REQUIRED false - DEFAULT ''

