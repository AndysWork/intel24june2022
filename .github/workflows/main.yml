# This is a basic workflow to help you get started with Actions

name: GatsbyApp CICD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '15.x'
      - name: Install Project Dependencies
        run: npm ci
      - name: Install Gatsby CLI
        run: npm install -g gatsby-cli@2.12.34
      - name: Install App Dependencies
        run: npm install     
      - name: Build
        run: npm run build
      - name: Verify build
        run: ls -la public
      - name: Upload the artifact
        uses: actions/upload-artifact@v3
        with:
          name: public-package
          path: public
  deployment:
    runs-on: ubuntu-latest
    needs: npm-audit
    timeout-minutes: 20
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Download the artifact
        uses: actions/download-artifact@v3
        with:
          name: public-package
          path: public
      - name: Copy & Deploy
        uses: mdallasanta/ssh-scp-deploy@v1.2.0
        with:
          local: 'public'                                                  
          remote: '/home/${{secrets.USER}}'                                                
          host: ${{secrets.HOST}}                                      
          user: ${{secrets.USER}}                                                             
          key: ${{secrets.KEY}}                                         
          pre_upload: sudo rm -r /var/www/html/*  
          post_upload: sudo mv public/* /var/www/html
          ssh_options: -o StrictHostKeyChecking=no        
          scp_options: -v

  npm-audit:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout the Codebase
        uses: actions/checkout@v3
    
      - name: Security Component Scanning
        run: npm audit --json > npm-audit-result.json
        continue-on-error: true
      - name: List the Files available
        run: ls -la

      - name: Archive the NPM Audit Results Output JSON file
        uses: actions/upload-artifact@v3
        with:
          name: NPM Audit Output JSON File
          path: npm-audit-result.json
        if: always()